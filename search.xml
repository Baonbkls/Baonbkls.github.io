<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2022/11/09/test/"/>
      <url>/2022/11/09/test/</url>
      
        <content type="html"><![CDATA[<h1 id="步入Linux的现代方法"><a href="#步入Linux的现代方法" class="headerlink" title="步入Linux的现代方法"></a>步入Linux的现代方法</h1><h3 id="一、Linux的初步认识"><a href="#一、Linux的初步认识" class="headerlink" title="一、Linux的初步认识"></a>一、Linux的初步认识</h3><h5 id="（1）操作系统以及Linux操作系统的认识"><a href="#（1）操作系统以及Linux操作系统的认识" class="headerlink" title="（1）操作系统以及Linux操作系统的认识"></a>（1）操作系统以及Linux操作系统的认识</h5><p><strong>Linux</strong>或<strong>GNU/Linux</strong>（Linux真正的名字）是一个<a href="https://simple.wikipedia.org/wiki/Unix-like">类Unix</a><a href="https://simple.wikipedia.org/wiki/Operating_system">操作系统</a></p><p>Linux的定义组件是<a href="https://simple.wikipedia.org/wiki/Linux_kernel">Linux内核</a>，是<a href="https://simple.wikipedia.org/wiki/Linus_Torvalds">Linus Torvalds</a>最初单独开发的<a href="https://simple.wikipedia.org/wiki/Kernel_(computing)">操作系统内核</a></p><h5 id="（2）关于VM上不同Linux发行版的介绍"><a href="#（2）关于VM上不同Linux发行版的介绍" class="headerlink" title="（2）关于VM上不同Linux发行版的介绍"></a>（2）关于VM上不同Linux发行版的介绍</h5><p>目前主流Linux发行版主要有：Ubuntu（基于Debian）、Centos（基于Fedora）、Kali（基于Debian）……</p><h3 id="二、准备工作（VMware虚拟机的使用）"><a href="#二、准备工作（VMware虚拟机的使用）" class="headerlink" title="二、准备工作（VMware虚拟机的使用）"></a>二、准备工作（VMware虚拟机的使用）</h3><h5 id="（1）安装VMware-Workstation-Pro"><a href="#（1）安装VMware-Workstation-Pro" class="headerlink" title="（1）安装VMware Workstation Pro"></a>（1）安装VMware Workstation Pro</h5><p>由于许多Linux操作在window系统上实现会被检测，安全和方便起见，显然虚拟机环境是不错的选择，这里我们选择VMware Workstation Pro</p><h5 id="（2）Ubuntu的安装与使用"><a href="#（2）Ubuntu的安装与使用" class="headerlink" title="（2）Ubuntu的安装与使用"></a>（2）Ubuntu的安装与使用</h5><p>记得到官网下载ISO镜像文件<a href="https://ubuntu.com/download">获取乌班图|下载|乌班图 (ubuntu.com)</a></p><h3 id="三、步入Linux的世界"><a href="#三、步入Linux的世界" class="headerlink" title="三、步入Linux的世界"></a>三、步入Linux的世界</h3><h5 id="（1）Linux四大组成部分"><a href="#（1）Linux四大组成部分" class="headerlink" title="（1）Linux四大组成部分"></a>（1）Linux四大组成部分</h5><p><strong>Linux kernel 内核</strong>：Linux内核是 Linux 操作系统（OS）的主要组件，也是计算机硬件与其进程之间的核心接口。它负责两者之间的通信，还要尽可能高效地管理资源</p><p><strong>Linux shell</strong>：系统的用户界面，提供了用户与内核进行交互操作的一种接口</p><p><strong>Linux 文件系统</strong>：文件系统是文件存放在磁盘等存储设备上的组织方法</p><p> <strong>Aplication 应用程序</strong>：标准的Linux系统一般都有一套都有称为应用程序的程序集，它包括文本编辑器、编程语言、XWindow、办公套件、Internet工具和数据库等</p><h5 id="（2）GUI和GNU"><a href="#（2）GUI和GNU" class="headerlink" title="（2）GUI和GNU"></a>（2）GUI和GNU</h5><img src="E:\Pictures\无标题.png" alt="无标题" style="zoom: 33%;" /><h5 id="（3）Linux-内核：操作系统"><a href="#（3）Linux-内核：操作系统" class="headerlink" title="（3）Linux 内核：操作系统"></a>（3）Linux 内核：操作系统</h5><p>1.硬件设备  管理使用</p><p>2.软件程序 （系统）—&gt;操作系统</p><p>3.系统内存</p><p>4.文件管理：保存文件，删除文件，修改文件……</p><h5 id="（4）Linux文件系统"><a href="#（4）Linux文件系统" class="headerlink" title="（4）Linux文件系统"></a>（4）Linux文件系统</h5><p>文件系统：读、写的标准</p><p>Windows上主要的文件系统：NTFS</p><p>Linux 支持的文件系统类型：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ext,  ext2, ext3, ext4, hpfs, iso9660, JFS, minix,</span><br><span class="line">       msdos, ncpfs, nfs, ntfs, proc, Reiserfs, smb, sysv, umsdos, vfat, XFS, xiafs</span><br></pre></td></tr></table></figure><h5 id="（5）GNU组织"><a href="#（5）GNU组织" class="headerlink" title="（5）GNU组织"></a>（5）GNU组织</h5><p>Unix上具有的一些软件，Linux内核本身没有，所以GNU他们模仿Unix，为Linux写了一些必要的软件</p><p>1.GNU核心：原本在Unix上的一些命令和工具，被模仿（移植） 到了Linux上。</p><p>供Linux使用的这套工具：coreutils coreutilities 软件包</p><p>（1）用来处理文件的工具</p><p>（2）用来操作文本的工具</p><p>（3）用来管理进程的工具</p><p>2.shell（壳层） 提供给用户使用的软件：用户拿它来使用电脑，并且和电脑交互。</p><p>命令行壳层提供一个命令行界面（CLI）；而图形壳层提供一个图形用户界面（GUI）。</p><p>通常情况下，我们称Linux shell 指的是 CLI  Command-Line Interface</p><p>3.shell———CLI和GUI</p><p>CLI：不同的Linux shell：Bash shell 基础shell 、Zsh、Ash、Korn、Tcsh</p><p>GUI Desktop：X Windows、KDE（菜单、快捷方式、任务栏、最小化应用…）、GNOME、Unity</p><h3 id="四、Shell命令"><a href="#四、Shell命令" class="headerlink" title="四、Shell命令"></a>四、Shell命令</h3><h5 id="（1）CLI终端Terminal基本显示介绍"><a href="#（1）CLI终端Terminal基本显示介绍" class="headerlink" title="（1）CLI终端Terminal基本显示介绍"></a>（1）CLI终端Terminal基本显示介绍</h5><p>bao@bao-virtual-machine:~/Desktop$</p><p>用户名@机器名：当前所在目录 $等待用户输入</p><h5 id="（2）Linux命令参数"><a href="#（2）Linux命令参数" class="headerlink" title="（2）Linux命令参数"></a>（2）Linux命令参数</h5><p>1.输入 <strong>ls</strong>：展示当前目录下的文件</p><p><strong>ll</strong>：显示的更详细</p><p><strong>最装逼的：ls -alF</strong></p><p>……命令太多太多</p><p>用 man 后+ 指令 可以显示出指令的作用 </p><p>2.<strong>键盘上常用键位及其功能</strong>：</p><p>上下键可以切换短期使用的命令</p><p>PgUp PgDn可以上下翻页  输入q键退出</p><p>CTRL + L 或者输入clear 即可清屏</p><p>3.<a href="https://wangchujiang.com/linux-command/">Linux命令搜索引擎</a> </p><h5 id="（3）Linux根目录解析"><a href="#（3）Linux根目录解析" class="headerlink" title="（3）Linux根目录解析"></a>（3）Linux根目录解析</h5><p><em><strong>Linux一切皆文件</strong></em></p><p>\ 反斜线 Windows</p><p>/ 正斜线 Linux</p><p><strong>在Linux终端中：</strong></p><p> /Linux根目录 最终的</p><p>/bin 二进制目录GNU工具 ls等自带的命令   存放许多用户级</p><p>/cdrom 光盘</p><p>/etc 系统文件配置目录</p><p>/home 主目录，显示所有用户目录</p><p>/lib 库目录</p><p>/lost+found 意外情况文件所在位置</p><p>/mnt 挂载目录  挂载–外在的设备和电脑进行连接</p><p>/proc 伪文件系统</p><p>/run 运行目录</p><p>/tmp 临时目录 （temp）</p><p>/var 可变目录 （临时文件，经常会发生一些变化的文件）</p><p>/boot 启动目录</p><p>/dev 设备目录</p><p>/media 媒体目录</p><p>/opt 可选目录</p><p>/root 根目录 管理员文件夹</p><p>/sbin 系统二进制目录，GNU高级管理员使用的命令工具</p><p>/srv 服务目录 本地服务</p><p>/usr 用户二进制目录，GNU工具   自己安装的软件到/usr/bin里面找</p><p><strong>FHS文件系统层级标准</strong></p><p>ps：多使用，多操作，慢慢熟悉，忘记了多搜搜</p><h5 id="（4）cd命令"><a href="#（4）cd命令" class="headerlink" title="（4）cd命令"></a>（4）cd命令</h5><p>cd   /文件名1/文件名2   … 进入某一个文件里面</p><p>cd ~ 或者 直接cd  进入（回到）用户目录  （ ~ 可以理解为用户目录）</p><p>cd - 返回到上一次操作的目录</p><p>cd .. 返回到上一层目录</p><p>cd ../.. 返回上一层的上一层目录….（自行体会）</p><p>pwd 显示当前的目录的绝对路径</p><p>详细<a href="https://wangchujiang.com/linux-command/">Linux命令搜索引擎</a></p><h5 id="（5）Linux中Ctrl-C-的作用"><a href="#（5）Linux中Ctrl-C-的作用" class="headerlink" title="（5）Linux中Ctrl + C 的作用"></a>（5）Linux中Ctrl + C 的作用</h5><p>命令执行过程中强制退出</p><p>如果非要拷贝命令 1.右键选取 然后点击copy  2. 选取后 按住Ctrl + Shift + C / V </p><h5 id="（6）文件目录"><a href="#（6）文件目录" class="headerlink" title="（6）文件目录"></a>（6）文件目录</h5><p>1.绝对路径（全） 不论到天涯海角，只要给你，你就能找到</p><p>在Windows上：  盘符：\文件夹\ … \文件名.文件后缀</p><p>银河系太阳系地球亚洲中国北京海淀区中关村丹棱路5号微软大厦2楼12-14层微软亚太研究院</p><p>2.相对路径（不全）</p><p>一定要设置故事背景前提，即你在哪?</p><p>相对而言  相对国家 相对城市  相对区而言</p><p>1）北京…</p><p>海淀区中关村丹棱路5号微软大厦2楼12-14层微软亚太研究院</p><p>2）北京朝阳区</p><p>海淀区中关村丹棱路5号微软大厦2楼12-14层微软亚太研究院</p><p>3）上海</p><p>北京海淀区中关村丹棱路5号微软大厦2楼12-14层微软亚太研究院</p><p><strong>我在哪？</strong></p><p>E:\software</p><p><strong>5E相对路径-&gt;相对于谁？</strong></p><p>\5E\5EClient</p><p><strong>Linux上：</strong></p><p><strong>~</strong> 代表 ： /home/bao/ 即用户目录</p><p><strong>·</strong>使用相对路径打开后面的文件时  文件名前边不要加/</p><p><strong>·</strong>若加 / 则Linux会在根目录下创建一个新的临时文件，此时不再是相对路径，而是变成了绝对路径</p><p><strong>·</strong>或则加  ./ 意思为当前目录下什么什么文件夹     或者 ~/ 全局路径</p><p><strong>拓展：</strong> 单点符 .  当前文件夹     双点符 .. 当前目录的父目录（上一级目录）</p><p><strong>练习：</strong>自己创建文件夹，然后来回进入，反复练习 ls  cd 命令</p><h5 id="（7）-ls进阶用法，文件下各种匹配过滤符号"><a href="#（7）-ls进阶用法，文件下各种匹配过滤符号" class="headerlink" title="（7）  ls进阶用法，文件下各种匹配过滤符号"></a>（7）  ls进阶用法，文件下各种匹配过滤符号</h5><p>用<strong>ls -l</strong> 查找文件时  后面的<strong>文件扩展匹配符</strong>：  *****  代表多个符号      <strong>？</strong> 代表一个符号</p><p><strong>元字符通配符</strong>： ls -l f[a-x].txt    意思为找字母a-x的f[]ck的.txt文件</p><p> ls -l f[！a-x].txt   加个感叹号懂的都懂</p><h5 id="（8）touch命令"><a href="#（8）touch命令" class="headerlink" title="（8）touch命令"></a>（8）touch命令</h5><p>1.更新文件写入时间  </p><p>2.用touch 一个新的文件名  来创建一个新的文件</p><h5 id="（9）cp命令"><a href="#（9）cp命令" class="headerlink" title="（9）cp命令"></a>（9）cp命令</h5><p><strong>cp文件</strong>的格式： cp 你想复制的文件  你想复制到哪</p><p>​                            cp 源文件                 目标文件            若目标文件不存在  则cp会创建一个目标文件</p><p>若目标文件已存在 ，则源文件内容会覆盖目标文件的内容</p><p>一般使用时 应写为：cp  -i  源文件  目标文件   此时会给你一个提示 输入 y 或 n</p><p>覆盖文件之后，文件写入时间会发生改变</p><p><strong>cp文件夹</strong>的格式：cp  -r  源文件夹的（绝对或相对）路径   目标文件夹的（绝对或相对）路径</p><p><strong>cp文件到文件夹</strong>的格式：cp 源文件 目标文件夹路径   </p><h5 id="（10）终端光标移动小技巧"><a href="#（10）终端光标移动小技巧" class="headerlink" title="（10）终端光标移动小技巧"></a>（10）终端光标移动小技巧</h5><p><strong>Tab键：</strong>自动补全</p><p><strong>Ctrl + 方向左右键</strong> 可以快速跳跃符号前的字母</p><p><strong>Ctrl + L</strong> 可以快速清屏</p><p><strong>Ctrl + A</strong> 快速跳到命令的开头    <strong>Ctrl + E</strong>  快速跳到命令的结尾</p><p><strong>Ctrl + H</strong> 从选定字符开始往前删除</p><p><strong>Ctrl + T</strong> 可以将选定字符前的字符往后移动</p><p><strong>Ctrl + U</strong> 将光标前所有字符删除   <strong>Ctrl + K</strong> 将光标后所有字符删除                     </p><p><strong>Ctrl +  J</strong>  相当于回车键                                                                                                                                       </p><h5 id="（11）-lnk链接文件（快捷方式）"><a href="#（11）-lnk链接文件（快捷方式）" class="headerlink" title="（11）.lnk链接文件（快捷方式）"></a>（11）.lnk链接文件（快捷方式）</h5><p>Linux上：链接文件</p><ol><li><p><strong>符号链接（软链接）</strong>——快捷方式     原来的文件/文件夹 必须是存在的</p><p>Symbolic links</p></li><li><p><strong>硬链接</strong>  副本  原来的文件/文件夹 必须是存在的</p><p>Soft links</p></li></ol><p>创建软链接：ln -s 源文件 创建的快捷方式名称    不同硬盘之间可以创建</p><p>创建硬链接就是直接创建    只能在同一个硬盘中创建</p><h5 id="（12）mv命令（move）"><a href="#（12）mv命令（move）" class="headerlink" title="（12）mv命令（move）"></a>（12）mv命令（move）</h5><p><strong>重命名：</strong> mv 重命名的文件 重命名的名字</p><p><strong>移动文件：</strong>mv 要移动的文件 要移动到的位置</p><p><strong>骚操作：</strong>移动文件后 输入 cd !$  即可进入上一条命令执行的最后的路径 然后再 ls 即可查看</p><h5 id="（13）rm命令（remove）———非常危险！！"><a href="#（13）rm命令（remove）———非常危险！！" class="headerlink" title="（13）rm命令（remove）———非常危险！！"></a>（13）rm命令（remove）———非常危险！！</h5><p>使用rm命令删除时一种彻底删除方式</p><p>用 rm 文件名    直接删除</p><p>一般使用：rm -i -r 文件名    会出现提示 输入y或n  遍历删除 </p><p>rm命令比较危险，一般使用第三方删除软件代替rm</p><h5 id="（14）目录（文件夹）"><a href="#（14）目录（文件夹）" class="headerlink" title="（14）目录（文件夹）"></a>（14）目录（文件夹）</h5><p>创建文件夹的命令：mkdir（make  directories）</p><p>创建副目录（多级文件夹）：mkdir -p 文件夹1/文件夹2/…</p><p>创建文件的命令：touch</p><p>删除空目录：rmdir     常用还是 rm</p><h5 id="（15）文件类型"><a href="#（15）文件类型" class="headerlink" title="（15）文件类型"></a>（15）文件类型</h5><p>查看文件类型：file  文件名/</p><p><a href="https://wangchujiang.com/linux-command/">Linux命令搜索引擎</a></p><h5 id="（16）查看文件"><a href="#（16）查看文件" class="headerlink" title="（16）查看文件"></a>（16）查看文件</h5><p>用于一些短的文件：<strong>cat</strong>  <strong>文件名</strong></p><p><strong>cat  -A</strong>  可以显示写入的所有空格、换行等</p><p><strong>more 文件名</strong>       可以多页面展示文件，  B键向上翻页 ，空格向下翻页 ，回车一行一行翻 ，Q退出</p><p><strong>less 文件名</strong>     PageUp  PageDown可以上下翻页  Q键退出  还可以输入关键字母回车查找关键字  数字前加/</p><p><strong>tail  -n  数字  文件名</strong>         查看文件末尾几行</p><p><strong>head -n  数字  文件名</strong>      查看文件开头几行</p><p>直接用 tail 或 head  文件名   均只显示十行</p><h3 id="五、系统上的Shell"><a href="#五、系统上的Shell" class="headerlink" title="五、系统上的Shell"></a>五、系统上的Shell</h3><h5 id="（1）Linux当中的任务管理器"><a href="#（1）Linux当中的任务管理器" class="headerlink" title="（1）Linux当中的任务管理器"></a>（1）Linux当中的任务管理器</h5><p>在终端中输入： top         PageUp / Down 翻页</p><p><strong>ps命令</strong> 用于报告当前系统的进程状态… （有关进程）  关于ps的更多命令请自行查询</p><p>kill  进程ID            将一个进程干掉</p><h5 id="（2）挂载"><a href="#（2）挂载" class="headerlink" title="（2）挂载"></a>（2）挂载</h5><p>当把一个电脑本身不存在的硬件插入电脑当中，电脑创建一个临时的盘供用户使用，这个过程就叫做挂载</p><p>Linux中，USB挂载到    media文件 / 用户名 / USB  （非真实路径）</p><p><code>sudo fdisk -l</code>显示当前使用的挂载设备的信息   Device  为设备真实挂载分区</p><p><code>sudo mount /设备真实挂载分区 /mnt</code>  将原挂载目录的东西映射到mnt文件下面，转变挂载路径</p><p><code>sudo umount /mnt</code>   卸载挂载目录下的文件   若要卸载/media下的挂载目录，需要先退出USB目录，结束USB的使用进程</p><p><code>df</code> 显示磁盘相关的信息  <strong>Filesystem</strong> <em>挂载分区</em>   <strong>1K-blocks</strong>  <em>能容纳多少个1024字节块大小</em>  <strong>Used</strong> <em>已使用</em></p><p><strong>Available</strong> <em>剩余可使用1024字节大小</em>     <strong>Mount on</strong> <em>挂载的目录</em></p><p><code>df -h</code>    显示的更清楚     <code>du -h</code>  显示每个文件和目录的磁盘使用空间</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/07/hello-world/"/>
      <url>/2022/11/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
